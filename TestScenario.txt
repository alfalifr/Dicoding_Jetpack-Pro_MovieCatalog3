• Skenario
    ○ Instrumented Test:
        § DetailActivityTest:
            □ showDetail:
                ® On MainActivity, click first item appear in RecyclerView, then enter DetailActivity.
                ® Assert loading progress bar should be gone.
                ® Assert error TextView should be gone.
                ® Assert title is displayed and not template.
                ® Assert release date is displayed and not template.
                ® Assert genres is displayed and not template.
                ® Assert overview header is displayed.
                ® Assert overview content is displayed and not template.
            □ showDetailOnError:
                ® On MainActivity, click first item appear in RecyclerView, then enter DetailActivity.
                ® Assert loading progress bar should be gone.
                ® Assert error TextView is displayed with text starts with 'Error:' and contains 'cause:'.
                ® Assert overview header should be gone.
                ® Assert overview content should be gone.
        § MainActivityTest:
            □ getShowList:
                ® Assert RecyclerView is displayed and not empty.
                ® Assert first item title is displayed and not template.
                ® Assert first item release date is displayed and not template.
                ® Assert loading progress bar should be gone.
                ® Assert no data TextView should be gone.
            □ getShowListOnError:
                ® Assert RecyclerView should be gone.
                ® Assert loading progress should be gone.
                ® Assert no data TextView is displayed with text starts with 'Error:' and contains 'cause:'.
            □ getShowListOnNoData:
                ® Assert RecyclerView should be gone.
                ® Assert loading progress should be gone.
                ® Assert no data TextView is displayed with text same as R.string.no_data.
        § ShowFavActivityTest:
            □ showFavTest:
                ® Clear database first.
                ® Click item 1 to go to detail.
                ® Press to like the show.
                ® Back to main list.
                ® Go to favourite list.
                ® Assert item 1 is displayed in favourite.
                ® Enter the detail page.
                ® Dislike the show.
                ® Back to favourite list.
                ® Assert no data is displayed.
                ® Assert 'No Data' TextView is displayed.
                ® Assert loading bar is not displayed.
        § ShowFavRepoTest:
            □ insertFav:
                ® Insert dummyMovie to database.
                ® Insert dummyTv to database.
                ® Query movie data based on dummyMovie.id.
                ® Query TV data based on dummyTv.id.
                ® Assert movie data equals to dummyMovie.
                ® Assert TV data equals to dummyTv.
            □ isShowFav:
                ® Query dummyMovie favourite boolean.
                ® Query dummyTv favourite boolean.
                ® Query dummyMovie2 favourite boolean.
                ® Query dummyTv2 favourite boolean.
                ® Assert dummyMovie is favourite (boolean == true).
                ® Assert dummyTv is favourite (boolean == true).
                ® Assert dummyMovie2 is not favourite (boolean == false).
                ® Assert dummyTv2 is not favourite (boolean == false).
            □ getPopularMovieList:
                ® Query favourite movie list.
                ® Assert favourite movie list is not empty.
                ® Assert favourite movie list equals to listOf(dummyMovie).
            □ getPopularTvList:
                ® Query favourite TV list.
                ® Assert favourite TV list is not empty.
                ® Assert favourite TV list equals to listOf(dummyTv).
            □ deleteFav:
                ® Delete dummyMovie from database and get the deleted count.
                ® Delete dummyTv from database and get the deleted count.
                ® Delete dummyMovie2 from database and get the deleted count.
                ® Delete dummyTv2 from database and get the deleted count.
                ® Assert dummyMovie deleted count equals to 1.
                ® Assert dummyTv deleted count equals to 1.
                ® Assert dummyMovie2 deleted count equals to 0.
                ® Assert dummyTv2 deleted count equals to 0.
                ® Query dummyMovie favourite boolean.
                ® Query dummyTv favourite boolean.
                ® Assert dummyMovie is not favourite anymore (boolean == false).
                ® Assert dummyTv is not favourite anymore (boolean == false).

    ○ Unit Testing:
        § ShowApiRepoTesting:
            □ getPopularMovieList:
                ® Assert ShowDataSource.getPopularMovieList(null) is invoked.
                ® Assert the result is Success.
                ® Assert the result data equals dummy movie data.
            □ getPopularTvList:
                ® Assert ShowDataSource.getPopularTvList(null) is invoked.
                ® Assert the result is Success.
                ® Assert the result data equals dummy tv data.
            □ getMovieDetail:
                ® Assert ShowDataSource.getMovieDetail(null, data.show.id) is invoked.
                ® Assert the result is Success.
                ® Assert the result data equals dummy movie detail data.
            □ getTvDetail:
                ® Assert ShowDataSource.getTvDetail(null, data.show.id) is invoked.
                ® Assert the result is Success.
                ® Assert the result data equals dummy tv detail data.
        § ShowDetailViewModelTest:
            □ downloadMovieDetail:
                ® Assert ShowRepo.getMovieDetail(null, data.id) is invoked.
                ® Assert mockObserver.onChanged(movieDetail) is invoked.
                ® Assert data from LiveData equals dummy movie detail data.
            □ downloadTvDetail:
                ® Assert ShowRepo.getTvDetail(null, data.id) is invoked.
                ® Assert mockObserver.onChanged(tvDetail) is invoked.
                ® Assert data from LiveData equals dummy tv detail data.
            □ insertFav:
                ® Assert ShowFavRepo.insertFav(dummyShowFav) is invoked.
                ® Assert mockFavObserver.onChanged(dummyFavBool) is invoked.
                ® Assert data from LiveData equals dummy boolean data.
            □ isFav:
                ® Assert ShowFavRepo.isShowFav(dummyShowFav.type, dummyShowFav.id) is invoked.
                ® Assert mockFavObserver.onChanged(dummyFavBool) is invoked.
                ® Assert data from LiveData equals dummy boolean data.
            □ deleteFav:
                ® Assert ShowFavRepo.deleteFav(dummyShowFav) is invoked.
                ® Assert mockFavObserver.onChanged(!dummyFavBool) is invoked.
                ® Assert data from LiveData equals opposite of dummy boolean data.
        § ShowListViewModelTest:
            □ downloadPopularMovieList:
                ® Assert ShowRepo.getPopularMovieList(null) is invoked.
                ® Assert Observer.onChanged(listOf(movie)) is invoked.
                ® Assert data from LiveData equals dummy movie data.
            □ downloadPopularTvList:
                ® Assert ShowRepo.getPopularTvList(null) is invoked.
                ® Assert Observer.onChanged(listOf(tv)) is invoked.
                ® Assert data from LiveData equals dummy tv data.

    ○ Unit Testing (Robolectric):
        § DetailActivityUnitTest:
            □ showDetail:
                ® Test starts straight in DetailActivity.
                ® Assert loading progress bar should be gone.
                ® Assert error TextView should be gone.
                ® Assert title is displayed and not template.
                ® Assert release date is displayed and not template.
                ® Assert genres is displayed and not template.
                ® Assert overview header is displayed.
                ® Assert overview content is displayed and not template.
            □ showDetailOnError:
                ® Test starts straight in DetailActivity.
                ® Assert loading progress bar should be gone.
                ® Assert error TextView is displayed with text starts with 'Error:' and contains 'cause:'.
                ® Assert overview header should be gone.
                ® Assert overview content should be gone.
        § MainActivityUnitTest:
            □ getShowList:
                ® Assert RecyclerView is displayed.
                ® Assert RecyclerView's LayoutManger is not null.
                ® Assert first item is displayed
                ® Assert first item title is displayed and not template.
                ® Assert first item release date is displayed and not template.
                ® Assert loading progress bar should be gone.
                ® Assert no data TextView should be gone.
            □ getShowListOnError:
                ® Assert RecyclerView should be gone but not null.
                ® Assert loading progress bar should be gone.
                ® Assert error TextView is displayed and shows error message.
            □ getShowListOnNoData:
                ® Assert RecyclerView should be gone but not null.
                ® Assert loading progress bar should be gone.
                ® Assert error TextView is displayed and shows no data message.